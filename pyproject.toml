[project]
name = "harvest-exporter"
version = "0.0.1"
description = "Export and aggregated harvest time recordings to generate bills"
authors = [
    {name = "JÃ¶rg Thalheim", email = "joerg@thalheim.io"}
]
license = "MIT"
readme = "README.md"
requires-python = ">=3.7"
dependencies = [
    "rich",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Topic :: Utilities",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

[project.urls]
Homepage = "https://github.com/numtide/harvest-invoice-calculator"

[project.scripts]
harvest-exporter = "harvest_exporter.cli:main"

[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["harvest*", "harvest_exporter*", "kimai*", "kimai_exporter*", "rest*"]

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  # pydocstyle
  "D",
  # todo comments
  "TD",
  # fixmes
  "FIX",

  # commented out code
  "ERA001",

  # Unused function argument
  "ARG001",
  "ARG002",

  "DTZ", # we don't care about timezone stuff

  # Dynamically typed expressions (typing.Any)
  "ANN401",
  # Trailing comma missing
  "COM812",
  # Unnecessary `dict` call (rewrite as a literal)
  "C408",
  # Boolean-typed positional argument in function definition
  "FBT001",
  # Logging statement uses f-string
  "G004",
  # disabled on ruff's recommendation as causes problems with the formatter
  "ISC001",
  # Use of `assert` detected
  "S101",
  # `subprocess` call: check for execution of untrusted input
  "S603",
  # Starting a process with a partial executable path
  "S607",
  # Boolean default positional argument in function definition
  "FBT002",

  "S310", # Audit URL open for permitted schemes. Allowing use of `file:` or custom schemes is often unexpected.

  # Too many statements
  "PLR0915",
  # Too many arguments in function definition
  "PLR0913",
  "PLR0912", # Too many branches
  # $X is too complex
  "C901",

  "E501", # line too long
  "T201", # `print` found
  "T203", # `pprint` found
  "PLR2004", # Magic value used in comparison
  "PD901", #  Avoid using the generic variable name `df` for DataFrames"

  # gives falls positives and isn't hard to check munually
  "ERA001",

  "RET505" # superfluous-else-return
]

[tool.mypy]
python_version = "3.12"
warn_redundant_casts = true
disallow_untyped_calls = true
disallow_untyped_defs = true
no_implicit_optional = true

[[tool.mypy.overrides]]
module = "setuptools.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pytest.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "rich.*"
ignore_missing_imports = true
